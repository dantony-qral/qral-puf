{
	"name": "AM_TEST_Execute_SQL_Query",
	"properties": {
		"folder": {
			"name": "AM_test"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Azure_Qral_Dev_Table",
						"type": "DatasetReference"
					},
					"name": "QCTable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TEST_SQL_LOOP_OUT",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "Azure_Qral_Dev_Table",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "TestQuery"
				},
				{
					"name": "Aggregate1"
				},
				{
					"name": "Aggregate2"
				},
				{
					"name": "AddLoadDate"
				}
			],
			"script": "parameters{\n\tsql_query as string,\n\tqc_id as integer,\n\tpipeline_name as string,\n\tpkey_column as string,\n\ttable_name as string\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: ($sql_query),\n\tformat: 'query') ~> QCTable\nQCTable derive(sql_query = $sql_query,\n\t\tqc_id = $qc_id,\n\t\tpipeline_name = $pipeline_name,\n\t\tpkey_column_values = toString(byName($pkey_column)),\n\t\ttable_name = $table_name) ~> TestQuery\nTestQuery aggregate(groupBy(qc_id,\n\t\tpipeline_name,\n\t\ttable_name),\n\tcount_of_rows = count(qc_id)) ~> Aggregate1\nTestQuery aggregate() ~> Aggregate2\nAggregate1 derive(load_date = currentDate()) ~> AddLoadDate\nAggregate2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCode as string,\n\t\tGrouping as string,\n\t\tClassification as string,\n\t\tSpecialization as string,\n\t\tDefinition as string,\n\t\t{Effective Date} as string,\n\t\t{Deactivation Date} as string,\n\t\t{Last Modified Date} as string,\n\t\tNotes as string,\n\t\t{Display Name} as string\n\t),\n\tpartitionFileNames:['test_loop_sql_out.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nAddLoadDate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink2"
		}
	}
}