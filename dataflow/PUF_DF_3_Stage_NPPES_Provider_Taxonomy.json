{
	"name": "PUF_DF_3_Stage_NPPES_Provider_Taxonomy",
	"properties": {
		"folder": {
			"name": "PUF_2_Stage_NPPES"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "PUF_DS_2_st_cms_nppes_main",
						"type": "DatasetReference"
					},
					"name": "StCmsNppesMain"
				},
				{
					"dataset": {
						"referenceName": "PUF_DS_PROD_NPPES_PROVIDER_TAXONOMY",
						"type": "DatasetReference"
					},
					"name": "ProdCmsNppesProvTaxonomy"
				},
				{
					"dataset": {
						"referenceName": "PUF_DS_2b_st_cms_nppes_provider_taxonomy",
						"type": "DatasetReference"
					},
					"name": "StCMSNPPESProvTaxonomy"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "QRAL_AZURE_SQL_DEV",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "ProdNPPESProvTaxonomyCurrent"
				},
				{
					"name": "StNPPESMainActive"
				},
				{
					"name": "Aggregate1"
				},
				{
					"name": "StNPPESMainActiveNPI"
				},
				{
					"name": "Aggregate2"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Aggregate3"
				},
				{
					"name": "Select2"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "Lookup"
				},
				{
					"name": "Select3"
				},
				{
					"name": "Select4"
				},
				{
					"name": "Select5"
				},
				{
					"name": "NewNPIProviderOtherIDFinal"
				},
				{
					"name": "InBothStOtherProvID"
				},
				{
					"name": "InBothProdOtherProvID"
				},
				{
					"name": "StCMSNPPESProvTaxonomySelect"
				},
				{
					"name": "NPIInBothNewData"
				},
				{
					"name": "NPIInBothNewDataFinal"
				},
				{
					"name": "NPIInBothOldData"
				},
				{
					"name": "NPIInBothOldDataFinal"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Exists1"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "SetOldDataToActiveFlag0"
				},
				{
					"name": "SetOldDataToCurrentFlag0"
				},
				{
					"name": "NPIOldDataActiveFlag0Final"
				},
				{
					"name": "NPIOldDataCurrentFlag0Final"
				},
				{
					"name": "NewChangeDataFinal"
				},
				{
					"name": "Select6"
				},
				{
					"name": "KeepOldDataFinal"
				},
				{
					"name": "FinalData"
				},
				{
					"name": "Select7"
				},
				{
					"name": "Select8"
				}
			],
			"script": "source(output(\n\t\tcurrent_flag as string,\n\t\tnpi as string,\n\t\tdata_month as integer,\n\t\t{active flag} as string,\n\t\t{entity type code} as string,\n\t\t{entity type} as string,\n\t\t{replacement npi} as string,\n\t\t{employer identification number (ein)} as string,\n\t\t{provider organization name (legal business name)} as string,\n\t\t{provider last name (legal name)} as string,\n\t\t{provider first name} as string,\n\t\t{provider middle name} as string,\n\t\t{provider name prefix text} as string,\n\t\t{provider name suffix text} as string,\n\t\t{provider credential text} as string,\n\t\t{provider other organization name} as string,\n\t\t{provider other organization name type code} as string,\n\t\t{provider other last name} as string,\n\t\t{provider other first name} as string,\n\t\t{provider other middle name} as string,\n\t\t{provider other name prefix text} as string,\n\t\t{provider other name suffix text} as string,\n\t\t{provider other credential text} as string,\n\t\t{provider other last name type code} as string,\n\t\t{provider first line business mailing address} as string,\n\t\t{provider second line business mailing address} as string,\n\t\t{provider business mailing address city name} as string,\n\t\t{provider business mailing address state name} as string,\n\t\t{provider business mailing address postal code} as string,\n\t\t{provider business mailing address country code (if outside u.s.) } as string,\n\t\t{provider business mailing address telephone number} as string,\n\t\t{provider business mailing address fax number} as string,\n\t\t{provider first line business practice location address} as string,\n\t\t{provider second line business practice location address} as string,\n\t\t{provider business practice location address city name} as string,\n\t\t{provider business practice location address state name} as string,\n\t\t{provider business practice location address postal code} as string,\n\t\t{provider business practice location address country code out us} as string,\n\t\t{provider business practice location address telephone number} as string,\n\t\t{provider business practice location address fax number} as string,\n\t\t{provider enumeration date} as date,\n\t\t{last update date} as date,\n\t\t{npi deactivation reason code} as string,\n\t\t{npi deactivation date} as date,\n\t\t{npi reactivation date} as date,\n\t\t{provider gender code} as string,\n\t\t{authorized official last name} as string,\n\t\t{authorized official first name} as string,\n\t\t{authorized official middle name} as string,\n\t\t{authorized official title or position} as string,\n\t\t{authorized official telephone number} as string,\n\t\t{is sole proprietor} as string,\n\t\t{is organization subpart} as string,\n\t\t{parent organization lbn} as string,\n\t\t{parent organization tin} as string,\n\t\t{authorized official name prefix text} as string,\n\t\t{authorized official name suffix text} as string,\n\t\t{authorized official credential text} as string,\n\t\t{healthcare provider primary taxonomy code} as string,\n\t\t{healthcare provider primary group taxonomy} as string,\n\t\t{provider primary license number} as string,\n\t\t{provider primary license number state code} as string,\n\t\tprimary_taxonomy_grouping as string,\n\t\tprimary_taxonomy_classification as string,\n\t\tprimary_taxonomy_specialization as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> StCmsNppesMain\nsource(output(\n\t\tcurrent_flag as string,\n\t\tdata_month as integer,\n\t\tnpi as string,\n\t\t{entity type code} as string,\n\t\t{entity type} as string,\n\t\t{active flag} as string,\n\t\thealthcare_provider_taxonomy_code as string,\n\t\ttaxonomy_grouping as string,\n\t\ttaxonomy_classification as string,\n\t\ttaxonomy_specialization as string,\n\t\tprovider_license_number as string,\n\t\tprovider_license_number_state_code as string,\n\t\thealthcare_provider_primary_taxonomy_switch as string,\n\t\thealthcare_provider_group_taxonomy as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ProdCmsNppesProvTaxonomy\nsource(output(\n\t\tcurrent_flag as string,\n\t\tdata_month as integer,\n\t\tnpi as string,\n\t\t{entity type code} as string,\n\t\t{entity type} as string,\n\t\t{active flag} as string,\n\t\tposition as string,\n\t\thealthcare_provider_primary_taxonomy_switch as string,\n\t\thealthcare_provider_taxonomy_code as string,\n\t\thealthcare_provider_group_taxonomy as string,\n\t\tprovider_license_number as string,\n\t\tprovider_license_number_state_code as string,\n\t\ttaxonomy_grouping as string,\n\t\ttaxonomy_classification as string,\n\t\ttaxonomy_specialization as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> StCMSNPPESProvTaxonomy\nProdCmsNppesProvTaxonomy filter(current_flag=='1') ~> ProdNPPESProvTaxonomyCurrent\nStCmsNppesMain filter({active flag}=='1') ~> StNPPESMainActive\nStNPPESMainActive aggregate(groupBy(npi),\n\ttemp = count(npi)) ~> Aggregate1\nAggregate1 select(mapColumn(\n\t\teach(match(in([('npi')],name)))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StNPPESMainActiveNPI\nStCMSNPPESProvTaxonomySelect aggregate(groupBy(npi),\n\ttemp = count(npi)) ~> Aggregate2\nAggregate2 select(mapColumn(\n\t\ttemp_npi = npi\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, Select2 join(temp_npi == npi_prod,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> Join1\nProdNPPESProvTaxonomyCurrent aggregate(groupBy(npi),\n\ttemp = count(npi)) ~> Aggregate3\nAggregate3 select(mapColumn(\n\t\tnpi_prod = npi\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nJoin1 split(isNull(npi_prod),\n\ttemp_npi==npi_prod,\n\tdisjoint: true) ~> ConditionalSplit1@(NewNPI, InBoth, OldNPI)\nSelect3, StCMSNPPESProvTaxonomySelect lookup(temp_npi == npi,\n\tmultiple: true,\n\tbroadcast: 'auto')~> Lookup\nConditionalSplit1@NewNPI select(mapColumn(\n\t\ttemp_npi\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nConditionalSplit1@InBoth select(mapColumn(\n\t\ttemp_npi\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nConditionalSplit1@OldNPI select(mapColumn(\n\t\ttemp_npi = npi_prod\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nLookup select(mapColumn(\n\t\tnpi = temp_npi,\n\t\tcurrent_flag,\n\t\tdata_month,\n\t\tnpi,\n\t\t{entity type code},\n\t\t{entity type},\n\t\t{active flag},\n\t\thealthcare_provider_primary_taxonomy_switch,\n\t\thealthcare_provider_taxonomy_code,\n\t\thealthcare_provider_group_taxonomy,\n\t\tprovider_license_number,\n\t\tprovider_license_number_state_code,\n\t\ttaxonomy_grouping,\n\t\ttaxonomy_classification,\n\t\ttaxonomy_specialization\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NewNPIProviderOtherIDFinal\nSelect4, StCMSNPPESProvTaxonomySelect lookup(temp_npi == npi,\n\tmultiple: true,\n\tbroadcast: 'auto')~> InBothStOtherProvID\nSelect4, ProdNPPESProvTaxonomyCurrent lookup(temp_npi == npi,\n\tmultiple: true,\n\tbroadcast: 'auto')~> InBothProdOtherProvID\nStCMSNPPESProvTaxonomy select(mapColumn(\n\t\teach(match(upper(name)!='POSITION'))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StCMSNPPESProvTaxonomySelect\nSelect8, InBothProdOtherProvID exists(Select8@npi == temp_npi\n\t&& Select8@{entity type code} == ProdCmsNppesProvTaxonomy@{entity type code}\n\t&& Select8@{active flag} == ProdCmsNppesProvTaxonomy@{active flag}\n\t&& Select8@healthcare_provider_taxonomy_code == ProdCmsNppesProvTaxonomy@healthcare_provider_taxonomy_code\n\t&& Select8@taxonomy_grouping == ProdCmsNppesProvTaxonomy@taxonomy_grouping\n\t&& Select8@taxonomy_classification == ProdCmsNppesProvTaxonomy@taxonomy_classification\n\t&& Select8@taxonomy_specialization == ProdCmsNppesProvTaxonomy@taxonomy_specialization\n\t&& Select8@provider_license_number == ProdCmsNppesProvTaxonomy@provider_license_number\n\t&& Select8@provider_license_number_state_code == ProdCmsNppesProvTaxonomy@provider_license_number_state_code\n\t&& Select8@healthcare_provider_primary_taxonomy_switch == ProdCmsNppesProvTaxonomy@healthcare_provider_primary_taxonomy_switch\n\t&& Select8@healthcare_provider_group_taxonomy == ProdCmsNppesProvTaxonomy@healthcare_provider_group_taxonomy,\n\tnegate:true,\n\tbroadcast: 'auto')~> NPIInBothNewData\nNPIInBothNewData select(mapColumn(\n\t\tnpi,\n\t\tcurrent_flag,\n\t\tdata_month,\n\t\t{entity type code},\n\t\t{entity type},\n\t\t{active flag},\n\t\thealthcare_provider_primary_taxonomy_switch,\n\t\thealthcare_provider_taxonomy_code,\n\t\thealthcare_provider_group_taxonomy,\n\t\tprovider_license_number,\n\t\tprovider_license_number_state_code,\n\t\ttaxonomy_grouping,\n\t\ttaxonomy_classification,\n\t\ttaxonomy_specialization\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NPIInBothNewDataFinal\nSelect7, InBothStOtherProvID exists(Select7@npi == temp_npi\n\t&& Select7@{entity type code} == StCMSNPPESProvTaxonomySelect@{entity type code}\n\t&& Select7@{active flag} == StCMSNPPESProvTaxonomySelect@{active flag}\n\t&& Select7@healthcare_provider_taxonomy_code == StCMSNPPESProvTaxonomySelect@healthcare_provider_taxonomy_code\n\t&& Select7@taxonomy_grouping == StCMSNPPESProvTaxonomySelect@taxonomy_grouping\n\t&& Select7@taxonomy_classification == StCMSNPPESProvTaxonomySelect@taxonomy_classification\n\t&& Select7@taxonomy_specialization == StCMSNPPESProvTaxonomySelect@taxonomy_specialization\n\t&& Select7@provider_license_number == StCMSNPPESProvTaxonomySelect@provider_license_number\n\t&& Select7@provider_license_number_state_code == StCMSNPPESProvTaxonomySelect@provider_license_number_state_code\n\t&& Select7@healthcare_provider_primary_taxonomy_switch == StCMSNPPESProvTaxonomySelect@healthcare_provider_primary_taxonomy_switch\n\t&& Select7@healthcare_provider_group_taxonomy == StCMSNPPESProvTaxonomySelect@healthcare_provider_group_taxonomy,\n\tnegate:true,\n\tbroadcast: 'auto')~> NPIInBothOldData\nDerivedColumn1 select(mapColumn(\n\t\tnpi,\n\t\tcurrent_flag,\n\t\tdata_month,\n\t\t{entity type code},\n\t\t{entity type},\n\t\t{active flag},\n\t\thealthcare_provider_taxonomy_code,\n\t\ttaxonomy_grouping,\n\t\ttaxonomy_classification,\n\t\ttaxonomy_specialization,\n\t\tprovider_license_number,\n\t\tprovider_license_number_state_code,\n\t\thealthcare_provider_primary_taxonomy_switch,\n\t\thealthcare_provider_group_taxonomy\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NPIInBothOldDataFinal\nNPIInBothOldData derive(current_flag = '0') ~> DerivedColumn1\nSelect5, StNPPESMainActiveNPI exists(temp_npi == npi,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists1\nExists1, StCMSNPPESProvTaxonomySelect lookup(temp_npi == npi,\n\tmultiple: true,\n\tbroadcast: 'auto')~> Lookup1\nLookup1 filter({active flag}=='1') ~> Filter1\nFilter1 derive({active flag} = '0') ~> SetOldDataToActiveFlag0\nFilter1 derive(current_flag = '0') ~> SetOldDataToCurrentFlag0\nSetOldDataToActiveFlag0 select(mapColumn(\n\t\tnpi = temp_npi,\n\t\tcurrent_flag,\n\t\tdata_month,\n\t\t{entity type code},\n\t\t{entity type},\n\t\t{active flag},\n\t\tother_provider_identifier,\n\t\tother_provider_identifier_issuer,\n\t\tother_provider_identifier_state,\n\t\tother_provider_identifier_type_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NPIOldDataActiveFlag0Final\nSetOldDataToCurrentFlag0 select(mapColumn(\n\t\tnpi = temp_npi,\n\t\tcurrent_flag,\n\t\tdata_month,\n\t\t{entity type code},\n\t\t{entity type},\n\t\t{active flag},\n\t\tother_provider_identifier,\n\t\tother_provider_identifier_issuer,\n\t\tother_provider_identifier_state,\n\t\tother_provider_identifier_type_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NPIOldDataCurrentFlag0Final\nNewNPIProviderOtherIDFinal, NPIInBothNewDataFinal, NPIInBothOldDataFinal, NPIOldDataActiveFlag0Final, NPIOldDataCurrentFlag0Final union(byName: true)~> NewChangeDataFinal\nNewChangeDataFinal select(mapColumn(\n\t\teach(match(name!='current_flag'))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nProdCmsNppesProvTaxonomy, Select6 exists(ProdCmsNppesProvTaxonomy@data_month == Select6@data_month\n\t&& ProdCmsNppesProvTaxonomy@npi == Select6@npi\n\t&& ProdCmsNppesProvTaxonomy@{entity type code} == Select6@{entity type code}\n\t&& ProdCmsNppesProvTaxonomy@{active flag} == Select6@{active flag}\n\t&& ProdCmsNppesProvTaxonomy@other_provider_identifier == Select6@other_provider_identifier\n\t&& ProdCmsNppesProvTaxonomy@other_provider_identifier_type_code == Select6@other_provider_identifier_type_code\n\t&& ProdCmsNppesProvTaxonomy@other_provider_identifier_state == Select6@other_provider_identifier_state\n\t&& ProdCmsNppesProvTaxonomy@other_provider_identifier_issuer == Select6@other_provider_identifier_issuer,\n\tnegate:true,\n\tbroadcast: 'auto')~> KeepOldDataFinal\nKeepOldDataFinal, NewChangeDataFinal union(byName: true)~> FinalData\nInBothProdOtherProvID select(mapColumn(\n\t\tnpi = temp_npi,\n\t\tcurrent_flag,\n\t\tdata_month,\n\t\tnpi,\n\t\t{entity type code},\n\t\t{entity type},\n\t\t{active flag},\n\t\thealthcare_provider_taxonomy_code,\n\t\ttaxonomy_grouping,\n\t\ttaxonomy_classification,\n\t\ttaxonomy_specialization,\n\t\tprovider_license_number,\n\t\tprovider_license_number_state_code,\n\t\thealthcare_provider_primary_taxonomy_switch,\n\t\thealthcare_provider_group_taxonomy\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select7\nInBothStOtherProvID select(mapColumn(\n\t\tnpi = temp_npi,\n\t\tcurrent_flag,\n\t\tdata_month,\n\t\tnpi,\n\t\t{entity type code},\n\t\t{entity type},\n\t\t{active flag},\n\t\thealthcare_provider_primary_taxonomy_switch,\n\t\thealthcare_provider_taxonomy_code,\n\t\thealthcare_provider_group_taxonomy,\n\t\tprovider_license_number,\n\t\tprovider_license_number_state_code,\n\t\ttaxonomy_grouping,\n\t\ttaxonomy_classification,\n\t\ttaxonomy_specialization\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select8\nFinalData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}