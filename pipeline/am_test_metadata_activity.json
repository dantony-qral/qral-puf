{
	"name": "am_test_metadata_activity",
	"properties": {
		"activities": [
			{
				"name": "Validation1",
				"type": "Validation",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_read_raw_file",
						"type": "DatasetReference",
						"parameters": {
							"containerName": {
								"value": "@pipeline().parameters.inputfilecontainername",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.inputfilename",
								"type": "Expression"
							}
						}
					},
					"timeout": "0.00:00:30",
					"sleep": 10
				}
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Validation1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_read_raw_file",
						"type": "DatasetReference",
						"parameters": {
							"containerName": {
								"value": "@pipeline().parameters.inputfilecontainername",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.inputfilename",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"columnCount",
						"structure",
						"size"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Check column Count",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Get Metadata1').output.columnCount,7)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_read_raw_file",
									"type": "DatasetReference",
									"parameters": {
										"containerName": {
											"value": "@pipeline().parameters.inputfilecontainername",
											"type": "Expression"
										},
										"fileName": {
											"value": "@pipeline().parameters.inputfilename",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Azure_Qral_Dev_Table",
									"type": "DatasetReference",
									"parameters": {
										"schemaName": {
											"value": "@pipeline().parameters.targetschemaname",
											"type": "Expression"
										},
										"tableName": {
											"value": "@pipeline().parameters.targetname",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"inputfilecontainername": {
				"type": "string"
			},
			"inputfilename": {
				"type": "string"
			},
			"targetschemaname": {
				"type": "string"
			},
			"targetname": {
				"type": "string"
			}
		},
		"folder": {
			"name": "AM_Test"
		},
		"annotations": []
	}
}