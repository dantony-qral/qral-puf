{
	"name": "DA_TEST_2_QC_Alert_Action",
	"properties": {
		"folder": {
			"name": "DA_Test"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Azure_Qral_Dev_Table",
						"type": "DatasetReference"
					},
					"name": "InputTable"
				},
				{
					"dataset": {
						"referenceName": "PUF_V_QC_Exception_Detail",
						"type": "DatasetReference"
					},
					"name": "QCExceptionDetail"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Azure_Qral_Dev_Table",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "CreateTempAlertCode"
				},
				{
					"name": "RedAlert"
				},
				{
					"name": "OrangeAlert"
				},
				{
					"name": "YellowAlert"
				},
				{
					"name": "RedAlertTable"
				},
				{
					"name": "OrangeAlertRecord"
				},
				{
					"name": "YellowAlertRecord"
				},
				{
					"name": "OrangeAlertFlag"
				},
				{
					"name": "YellowAlertFlag"
				},
				{
					"name": "RedAlertTempColumn"
				},
				{
					"name": "RedAlertFlag"
				},
				{
					"name": "CreateFinalAlertCode"
				},
				{
					"name": "NonRedRecord"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "RedAlertTableFinal"
				},
				{
					"name": "YellowAlertRecordFinal"
				},
				{
					"name": "OrangeAlertRecordFinal"
				}
			],
			"script": "parameters{\n\tpipeline_run_id as string,\n\tsql_query as string,\n\tinput_SchemaName as string,\n\tinput_TableName as string,\n\tpkey_column as string,\n\tpipeline_trigger_time as string,\n\tpipeline_name as string\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: ($sql_query),\n\tformat: 'query') ~> InputTable\nsource(output(\n\t\tqc_id as integer,\n\t\tpipeline_name as string,\n\t\tpipeline_run_id as string,\n\t\tpipeline_trigger_time as timestamp,\n\t\tpkey_column_values as string,\n\t\tcolumn_metric_error_values as string,\n\t\ttable_schema as string,\n\t\ttable_name as string,\n\t\tsql_query as string,\n\t\tcolumn_metric_name as string,\n\t\talert_code as string,\n\t\tqc_type_code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: (\"SELECT * FROM dqm.v_qc_exception_detail WHERE pipeline_run_id ='a7b59fd3-d16a-4dbc-bd47-64a7ac30b3a6' AND table_schema='nucc' AND table_name = 'nucc_taxonomy'\"),\n\tformat: 'query') ~> QCExceptionDetail\nMapDrifted1 derive(dqm_alert_code = 'P') ~> CreateTempAlertCode\nQCExceptionDetail filter(alert_code==\"R\") ~> RedAlert\nQCExceptionDetail filter(alert_code==\"O\") ~> OrangeAlert\nQCExceptionDetail filter(alert_code==\"Y\") ~> YellowAlert\nRedAlertTempColumn aggregate(groupBy(temp_alert_code,\n\t\talert_code),\n\ttemp_cnt = count(qc_id)) ~> RedAlertTable\nOrangeAlert aggregate(groupBy(pkey_column_values,\n\t\talert_code),\n\ttemp_cnt = count(qc_id)) ~> OrangeAlertRecord\nYellowAlert aggregate(groupBy(pkey_column_values,\n\t\talert_code),\n\ttemp_cnt = count(qc_id)) ~> YellowAlertRecord\nRedAlertFlag, OrangeAlertRecordFinal lookup(MapDrifted1@pkey_column_values == OrangeAlertRecordFinal@pkey_column_values,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> OrangeAlertFlag\nOrangeAlertFlag, YellowAlertRecordFinal lookup(MapDrifted1@pkey_column_values == YellowAlertRecordFinal@pkey_column_values,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> YellowAlertFlag\nRedAlert derive(temp_alert_code = 'P') ~> RedAlertTempColumn\nCreateTempAlertCode, RedAlertTableFinal lookup(dqm_alert_code == temp_alert_code,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> RedAlertFlag\nYellowAlertFlag derive(final_alert_code = iifNull(iifNull(alert_code_red,alert_code_orange,alert_code_yellow),dqm_alert_code)) ~> CreateFinalAlertCode\nCreateFinalAlertCode filter(final_alert_code!='R') ~> NonRedRecord\nInputTable derive(pkey_column_values = toString(byName('pkey_column_values'))) ~> MapDrifted1\nRedAlertTable select(mapColumn(\n\t\ttemp_alert_code,\n\t\talert_code_red = alert_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RedAlertTableFinal\nYellowAlertRecord select(mapColumn(\n\t\tpkey_column_values,\n\t\talert_code_yellow = alert_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> YellowAlertRecordFinal\nOrangeAlertRecord select(mapColumn(\n\t\tpkey_column_values,\n\t\talert_code_orange = alert_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OrangeAlertRecordFinal\nNonRedRecord sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}